@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer 
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> locOptions 
@{
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();
    var cultureList = locOptions.Value.SupportedUICultures.Select(x => new SelectListItem { Value = x.Name, Text =localizer.GetString( x.Name) }).ToList();
    var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}

<div>
    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                   <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">@localizer["Home"]</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">@localizer["Privacy"]</a>
                        </li>
                        <li class="nav-item">
                            <form asp-action ="CultureManagement"  method="post" asp-route-returnUrl="@returnUrl" >       
                              <select name="culture" asp-for="@culture.RequestCulture.UICulture.Name" asp-items="cultureList"
                                      onchange="    this.form.submit();">
                               </select>                     
                            </form>
                  
                        </li>                       
            </ul>
    </div>   
</div>

 